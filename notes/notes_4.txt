In Phase #2 of the project, you need to do the following.
(1) Fix the unit tests in TestCollatz.py
    Valid maximum cycle length values can be obtained using Collatz Calculator at

    https://www.uvatoolkit.com/problemssolve.php

    - Click on the 3n+1 problem
    - In the "Input:" box, enter an interval, for example 1 10
    - then hit the button "Generate output"
    - you will see the corresponding maximum cycle length in the "Output:" box

(2) Run the unit tests 
    This can be achieved in many ways by either 
    2.1 - "make tests"
    You may receive an error message as follows:
    "make: *** [TestCollatz.tmp] Error 1"

    Where can you check to see what went wrong?

    Note: Each time you need to run "make test", you need to run "make clean".

    2.2 - "python TestCollatz.py"

(3) Fix the method "collatz_eval" in "Collatz.py" by providing the correct implementation.

(4) Fix the acceptance tests in "RunCollatz.out" and "RunCollatz.in"
    You may use the Collatz Calculator mentions in (1).

(5) After fixing unit tests, "collatz_eval", and acceptance tests, 
    run "make test" (remember to run "make clean" before you run "make test.)

(6) Continuous integration:
    Is the process of automatically building and testing your code.

    - Building and integrating the code will be performed on GitLab.
    - To inform GitLab to perform continuous intgeration, you need to include 
    a file ".gitlab-ci.yml" in your project's folder.
    - If the file ".gitlab-ci.yml" exists in your project's folder and contains the proper
    instructions, then each time you push to remote, gitlab will automatically build and test your code. 

    Files that starts with a "." are hidden files. If you use the "ls" command, you may not be able to see them. 
    You may use "ls -al" instead.

(7) ".gitignore"
    It contains a list of files you want git to avoid pushing them to remote. 
    For example, In Mac OS, ".DS_Store" hidden files exists in all your directories 
    You want git to ignore them, so you add ".DS_Store" as a line in ".gitignore"