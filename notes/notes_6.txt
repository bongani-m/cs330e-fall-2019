Range syntax:
-----------
range(): returns an iterable object which produces elements on demand. 

range in python3 is a generator-like object. A generator produces elements on demand 
rather than expand an entire list into memory (like range() used to behave in Python2.x).
 
The advantage for the generator version of range() is greater efficiency in it's typical use-cases 
(e.g. iterating over them). To get the output in the usual list object, just use the list built-in 
on them like list(range(10)). 
-----

range(stop)
- stop: Number of integers (whole numbers) to generate, starting from zero. 

range([start], stop[, step])

- start: Starting number of the sequence.
- stop: Generate numbers up to, but not including this number.
- step: Difference between each number in the sequence.

Examples of Range:
>>> range(5)
 range(0, 5)
>>> list(range(5))
 [0, 1, 2, 3, 4]
>>>list(range(3, 6))
 [3, 4, 5]
>>> list(range(4, 10, 2))
 [4,  6, 8]
>>> list(range(4,4))
 []
